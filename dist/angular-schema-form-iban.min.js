angular.module("schemaForm").run(["$templateCache",function(r){r.put("directives/decorators/bootstrap/iban/iban.html",'<div class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError()}"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><div ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}"><span ng-if="form.fieldAddonLeft" class="input-group-addon" ng-bind-html="form.fieldAddonLeft"></span> <input ng-show="form.key" style="background-color: white" type="text" class="form-control {{form.fieldHtmlClass}}" schema-validate="form" ng-model="$$value$$" ng-disabled="form.readonly" iban="" name="{{form.key.slice(-1)[0]}}" format="form.format"> <span ng-if="form.fieldAddonRight" class="input-group-addon" ng-bind-html="form.fieldAddonRight"></span></div><span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div>')}]),function(){angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(r,o,a){var t;t=function(o,t,i){var n;return"iban"===t.type||"string"===t.type&&"iban"===t.format?(n=r.stdFormObj(o,t,i),n.key=i.path,n.type="iban",i.lookup[a.stringify(i.path)]=n,n):void 0},r.defaults.string.unshift(t),o.addMapping("bootstrapDecorator","iban","directives/decorators/bootstrap/iban/iban.html"),o.createDirective("iban","directives/decorators/bootstrap/iban/iban.html")}]),angular.module("schemaForm").directive("iban",function(){var r,o;return o=function(r){},r={restrict:"A",require:"ngModel",link:function(r,o,a,t){t.$parsers.unshift(function(r){var o;return o=IBAN.isValid(r),t.$setValidity("iban",o),o&&(r=IBAN.electronicFormat(r)),o?r:void 0}),t.$formatters.unshift(function(r){var o;return o=IBAN.isValid(r),t.$setValidity("iban",o),o&&(r=IBAN.printFormat(r)),r})}}})}.call(this);