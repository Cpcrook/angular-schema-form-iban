// Generated by CoffeeScript 1.6.3
angular.module('schemaForm').config(function(schemaFormProvider, schemaFormDecoratorsProvider, sfPathProvider) {
  var iban;
  iban = function(name, schema, options) {
    var f;
    if (schema.type === 'string' && (schema.format === 'date' || schema.format === 'date-time')) {
      f = schemaFormProvider.stdFormObj(name, schema, options);
      f.key = options.path;
      f.type = 'iban';
      options.lookup[sfPathProvider.stringify(options.path)] = f;
      return f;
    }
  };
  schemaFormProvider.defaults.string.unshift(iban);
  schemaFormDecoratorsProvider.addMapping('bootstrapDecorator', 'iban', 'directives/decorators/bootstrap/iban/iban.html');
  schemaFormDecoratorsProvider.createDirective('iban', 'directives/decorators/bootstrap/iban/iban.html');
});

angular.module('schemaForm').directive('iban', function() {
  var formatDate;
  formatDate = function(value) {
    if (angular.isString(value) || angular.isNumber(value)) {
      return new Date(value);
    }
    return value;
  };
  return {
    restrict: 'A',
    require: 'ngModel',
    scope: {
      ngModel: '=',
      iban: '=',
      minDate: '=',
      maxDate: '=',
      format: '='
    },
    link: function(scope, element, attrs, ngModel) {
      var defaultFormat, onceMax, onceMin, opts, picker, viewFormat;
      if (!element.pickadate) {
        return;
      }
      opts = {
        onClose: function() {
          element.blur();
        },
        formatSubmit: null
      };
      if (scope.iban) {
        angular.extend(opts, scope.iban);
      }
      element.pickadate(opts);
      defaultFormat = 'yyyy-mm-dd';
      viewFormat = $.fn.pickadate.defaults.format;
      picker = element.pickadate('picker');
      ngModel.$formatters.push(function(value) {
        if (angular.isUndefined(value) || value === null) {
          return value;
        }
        picker.set('view', value, {
          format: scope.format || defaultFormat
        });
        picker.set('highlight', value, {
          format: scope.format || defaultFormat
        });
        return picker.get('highlight', viewFormat);
      });
      ngModel.$parsers.push(function() {
        return picker.get('select', scope.format || defaultFormat);
      });
      if (angular.isDefined(attrs.minDate)) {
        onceMin = scope.$watch('minDate', (function(value) {
          if (value) {
            picker.set('min', formatDate(value));
            onceMin();
          }
        }), true);
      }
      if (angular.isDefined(attrs.maxDate)) {
        onceMax = scope.$watch('maxDate', (function(value) {
          if (value) {
            picker.set('max', formatDate(value));
            onceMax();
          }
        }), true);
      }
    }
  };
});

/*
//@ sourceMappingURL=angular-schema-form-iban.map
*/
